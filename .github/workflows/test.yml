name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:

permissions:
  contents: read

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  style:
    name: Code style (ktfmt) + Gradle cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: '17'
      - name: Setup Gradle (with caching)
        uses: gradle/actions/setup-gradle@v4
      - name: Run ktfmtCheck (qs-kotlin)
        run: ./gradlew :qs-kotlin:ktfmtCheck --stacktrace
  jvm_tests:
    name: JVM tests (Java ${{ matrix.java }})
    runs-on: ubuntu-latest
    needs: style
    strategy:
      fail-fast: false
      matrix:
        java:
          - '17'
          - '21'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
      - name: Setup Gradle (with caching)
        uses: gradle/actions/setup-gradle@v4
      - name: Run JVM tests
        run: ./gradlew :qs-kotlin:clean :qs-kotlin:test :qs-kotlin:jacocoTestReport --stacktrace
      - name: Upload test results
        uses: codecov/codecov-action@v5
        with:
          files: qs-kotlin/build/reports/jacoco/jacocoTestReport/jacoco.xml
          flags: jvm,java-${{ matrix.java }}
          name: qs-kotlin-jvm-${{ matrix.java }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  android_aar:
    name: Android AAR (AGP) + unit tests
    runs-on: ubuntu-latest
    needs: style
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: '17'
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: true
          packages: 'platform-tools'
      - name: Setup Gradle (with caching)
        uses: gradle/actions/setup-gradle@v4
      - name: Assemble AAR + run unit tests
        run: ./gradlew :qs-kotlin-android:assembleRelease :qs-kotlin-android:testReleaseUnitTest --stacktrace
  ensure_compatibility:
    name: Ensure compatibility with qs
    needs: style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install JS dependencies
        run: npm install
        working-directory: comparison/js
      - name: Run Kotlin comparison
        run: ./gradlew -q :comparison:run --console=plain --warning-mode=none > kotlin.out
      - name: Run Node comparison
        run: node comparison/js/qs.js > node.out
      - name: Show first lines (debug)
        if: ${{ always() }}
        run: |
          echo "=== Kotlin (first 80 lines) ==="
          head -n 80 kotlin.out || true
          echo "=== Node (first 80 lines) ==="
          head -n 80 node.out || true
      - name: Diff outputs
        run: |
          set -eo pipefail
          diff -u node.out kotlin.out > diff.out || (echo "::error::Differences found between Node and Kotlin outputs. See artifact diff.out"; exit 1)
      - name: Upload diff artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: comparison-diff
          path: |
            node.out
            kotlin.out
            diff.out
