name: Publish to Maven Central

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: read

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit
  publish:
    needs: test
    name: Publish
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    environment: maven
    env:
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
      ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Show Java and Gradle versions
        run: |
          java -version
          ./gradlew --version
      - name: Publish to Sonatype (staging) and release
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --stacktrace
  release:
    needs:
      - test
      - publish
    name: Github Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
      - name: Get name, version, and group from Gradle files
        id: get_version_and_name
        run: |
          set -e
          VERSION=$(awk -F'"' '/^[[:space:]]*version[[:space:]]*=/ { print $2; exit }' build.gradle.kts)
          GROUP=$(awk -F'"' '/^[[:space:]]*group[[:space:]]*=/ { print $2; exit }' build.gradle.kts)
          NAME=$(awk -F'"' '/^[[:space:]]*rootProject\.name[[:space:]]*=/ { print $2; exit }' settings.gradle.kts)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "GROUP=$GROUP" >> $GITHUB_ENV
          echo "NAME=$NAME" >> $GITHUB_ENV
      - name: Create tag-specific CHANGELOG
        id: create_changelog
        run: |
          set -e
          CHANGELOG_PATH=$RUNNER_TEMP/CHANGELOG.md
          awk '/^##[[:space:]].*/ { if (count == 1) exit; count++; print } count == 1 && !/^##[[:space:]].*/ { print }' CHANGELOG.md | sed -e :a -e '/^\n*$/{$d;N;ba' -e '}' > $CHANGELOG_PATH
          echo -en "\n[https://central.sonatype.com/artifact/$GROUP/$NAME/$VERSION](https://central.sonatype.com/artifact/$GROUP/$NAME/$VERSION)" >> $CHANGELOG_PATH
          echo "CHANGELOG_PATH=$CHANGELOG_PATH" >> $GITHUB_ENV
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          body_path: ${{ env.CHANGELOG_PATH }}
      - name: Clean up
        id: clean_up
        if: ${{ always() }}
        run: |
          rm -rf $CHANGELOG_PATH
  docs:
    uses: ./.github/workflows/docs.yml
    needs:
      - test
      - publish
    permissions:
      contents: write
    secrets: inherit
